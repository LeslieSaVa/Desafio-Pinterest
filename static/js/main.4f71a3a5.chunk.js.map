{"version":3,"sources":["components/pictures.js","components/navbar.js","components/modal.js","App.js","serviceWorker.js","index.js"],"names":["Pictures","props","react_default","a","createElement","className","src","url","alt","onClick","pushClick","Navbar","id","type","placeholder","Modal","e","target","getAttribute","class","imgUrl","titlefoto","descriptionreal","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","fotos","modal","countPage","title","description2","openModal","bind","assertThisInitialized","closeModal","_this2","window","onscroll","document","documentElement","scrollTop","innerHeight","offsetHeight","setState","objectSpread","fetch","then","data","json","data3","results","concat","_this3","i","console","log","description","_this4","map","item","components_pictures","key","urls","thumb","alt_description","components_modal","components_navbar","llamarfotos","Component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4f71a3a5.chunk.js","sourcesContent":["import React from 'react';\nimport './pictures.css'\n\nfunction Pictures (props) {\n    \n    return (\n\n        <div className=\"row\">\n            <div className=\"column\">\n                <img className=\"img\" src={props.url} alt=\"auto\" onClick={()=>props.pushClick(props)}/>\n                {/* <h2>Title Goes Here</h2>\n                <p>Loremdlkfjsdlfkdsjflkdsjflkd\n                    sjfldskjflsdfjsdlkfjdslfkjdsflsdjfdskf\n                    dfjksdlfjdslfkjsdflsjdfl\n                    ksdjflkdsjfklsdjfldksjfdsklfjlsd\n                </p> */}\n            </div>\n        </div>\n\n    )\n}\n\nexport default Pictures;\n\n\n    {/* <div class=\"flex-container\">\n        <section id=\"proyects\" class=\"container22\">\n        <div class=\"container2\">\n            <div class=\"card\">\n                <div class=\"img-box\">\n                    <img class=\"poke-img\" src={props.url} alt=\"\"/>\n                </div>\n                <div class=\"content\">\n                    <h2>Happy With Allergies</h2>\n                    <p>{props.description}</p>\n                </div>\n            </div>\n        </div>\n        </section>\n    </div>    */}\n","import React from 'react';\nimport './navbar.css'\n\nfunction Navbar (props) {\n    \n        return (\n            <div className=\"navBar\">\n                <div id=\"search-wrapper\">\n                    <ul>\n                        <li className=\"Home\">Inicio</li>\n                        <li className=\"follow\">Siguiendo</li>\n                        <li><i className=\"fas fa-user-circle\"></i>Leslie</li>\n                        <li><i className=\"fas fa-comment-dots\"></i></li>\n                        <li><i className=\"fas fa-bell\"></i></li>\n                        <li><i className=\"fas fa-ellipsis-h\"></i></li>\n                    </ul>\n                    <input type=\"text\" id=\"search\" className=\"input\" placeholder=\"Buscar\"/>\n                    <i className=\"fas fa-search\"></i>\n                    <i className=\"fab fa-pinterest logo\"></i>\n                </div>\n            </div>\n        )\n}\n\nexport default Navbar;","import React from 'react';\nimport './modal.css'\n\nfunction Modal (props) {\n        return (\n            <div className=\"container-modal\" onClick={(e)=>{\n                if(e.target.getAttribute(\"class\") === \"container-modal\"){\n                    props.pushClick()\n                }\n                }}>\n                <i class=\"fas fa-angle-left\"></i>    \n            <div className=\"modal\">\n                <div className=\"header-modal\">\n                    <i className=\"fas fa-ellipsis-h\"></i>\n                    <button className=\"btn-send\"><i class=\"fas fa-upload\"></i> Enviar</button>\n                    <button className=\"btn-save\"><i class=\"fas fa-thumbtack\"></i> Guardar</button>\n                </div>\n\n                <div className=\"containerImgyText\">\n                    <div className=\"img-container\">\n                        <img className=\"img-modal\" src={props.imgUrl} alt=\"\"/>\n                    </div>\n                    <div className=\"text-container\">\n                        <h5>{props.titlefoto}</h5>\n                        <button className=\"btn-follow\">Seguir</button>\n                        <button className=\"link\">goosesglitter.com</button>\n                        {/* <p className=\"parrafo\">You have your tree, your house and your<br/> \n                        dinner table decorated already. <br/> \n                        What are you going to do after finishing <br/> \n                        your holiday decoration and <br/> \n                        wrapping all the gifts? Don't forget<br/> \n                        to glam up yourself...MÃ¡s\n                        </p> */}\n                        <p className=\"parrafo\">{props.descriptionreal}</p>\n                        <hr className=\"line\"/>\n                        <p className=\"text\">Fotos y comentarios</p>\n                        <button className=\"btn-numberfotos\">3 Fotos</button>\n                        <p className=\"coments\">Comentarios</p>\n                    </div>\n                </div>\n\n            </div>\n            </div>\n        )\n}\n\nexport default Modal;","import React, { Component } from 'react';\nimport Pictures from './components/pictures';\nimport Navbar from './components/navbar';\nimport Modal from './components/modal'\nimport './App.css';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      fotos:null,\n      modal:false,\n      countPage:1,\n      title:null,\n      description2:null,\n    }\n    this.openModal=this.openModal.bind(this);\n    this.closeModal=this.closeModal.bind(this);\n\n  }\n  componentWillUpdate() {\n    window.onscroll = () => {\n      if (\n      document.documentElement.scrollTop + window.innerHeight > document.documentElement.offsetHeight*0.8 \n      ){\n        this.setState({\n          ...this.state,\n          countPage:this.state.countPage+1,\n        }, () => {\n          fetch('https://api.unsplash.com/search/photos?page='+this.state.countPage+'&per_page=20&query=flowers&client_id=13a06edd9f1f800ed95967f2be74dc9462a6d41dcc8ac89f648c84b123782513')\n          .then( data => data.json() )\n          .then(data => {\n            const data2 = this.state.fotos.results;\n            const data3 = data2.concat(data.results)\n            this.setState({\n              ...this.state,\n              fotos: {\n                ...this.state.fotos,\n                results: data3,\n              }\n            })\n          })\n        })\n      }\n    }\n  }\n\n  componentDidMount() {\n    // if (\n    //   document.documentElement.scrollTop === 0\n    //   ){\n    fetch('https://api.unsplash.com/search/photos?page='+this.state.countPage+'&per_page=20&query=flowers&client_id=13a06edd9f1f800ed95967f2be74dc9462a6d41dcc8ac89f648c84b123782513')\n      .then( data => data.json() )\n      .then(data => {\n        this.setState({\n          ...this.state,\n          fotos: data,\n        })\n      })\n    //}\n  }\n\n  openModal(i){\n    console.log(i);\n    this.setState({\n    ...this.state,\n    modal:i.url,\n    title: i.description,\n    description2:i.description2,\n  })\n  }\n\n  closeModal(){\n    this.setState({\n    ...this.state,\n    modal:false\n  })\n  }\n\n\n  llamarfotos() {\n    const mostrarFotos = this.state.fotos.results.map((item, i) => {\n      return (\n        <Pictures\n        key={i}\n        pushClick={this.openModal}\n        url={item.urls.thumb}\n        description={item.description}\n        description2={item.alt_description}\n        />\n      )\n    })\n    return mostrarFotos;\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {this.state.modal && <Modal pushClick={this.closeModal} imgUrl={this.state.modal} titlefoto={this.state.title} descriptionreal={this.state.description2}/> }\n          <Navbar />\n      <div className=\"flex-container\">\n            {this.state.fotos && this.llamarfotos()}\n      </div>\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}